plot_ly(housesaturday, x = ~housesaturday$DateTime, y = ~housesaturday$Sub_metering_1, name = 'Kitchen', type = 'scatter', mode = 'lines') %>%
add_trace(y = ~housesaturday$Sub_metering_2, name = 'Laundry Room', mode = 'lines') %>%
add_trace(y = ~housesaturday$Sub_metering_3, name = 'Water Heater & AC', mode = 'lines') %>%
layout(title = "Power Consumption saturday 2010 - 10 Minutes",
xaxis = list(title = "Time"),
yaxis = list (title = "Power (watt-hours)"))
housesunday <- filter(newDF, weekday == 'Sunday' & year == 2010 & (minute == 0 | minute == 10 | minute == 20 | minute == 30 | minute == 40 | minute == 50))
plot_ly(housesunday, x = ~housesunday$DateTime, y = ~housesunday$Sub_metering_1, name = 'Kitchen', type = 'scatter', mode = 'lines') %>%
add_trace(y = ~housesunday$Sub_metering_2, name = 'Laundry Room', mode = 'lines') %>%
add_trace(y = ~housesunday$Sub_metering_3, name = 'Water Heater & AC', mode = 'lines') %>%
layout(title = "Power Consumption Sundays 2010 - 10 Minutes",
xaxis = list(title = "Time"),
yaxis = list (title = "Power (watt-hours)"))
plot_ly(housemonth, x = ~housemonth$DateTime, y = ~housemonth$Sub_metering_2, name = 'Laumdry Room', type = 'scatter', mode = 'lines')
plot_ly(housemonth, x = ~housemonth$DateTime, y = ~housemonth$Sub_metering_2, name = 'Laumdry Room', type = 'scatter', mode = 'lines')
plot_ly(housemonth, x = ~housemonth$DateTime, y = ~housemonth$Sub_metering_3, name = 'Laumdry Room', type = 'scatter', mode = 'lines')
plot(houseWeek$Sub_metering_1)
houseDay <- filter(newDF, year == 2008 & month == 1 & day == 9)
plot_ly(houseDay, x = ~houseDay$DateTime, y = ~houseDay$Sub_metering_1, type = 'scatter', mode = 'lines')
houseDayend <- filter(newDF, year == 2008 & month == 1 & weekday == 'Saturday')
plot_ly(houseDayend, x = ~houseDayend$DateTime, y = ~houseDayend$Sub_metering_1, type = 'scatter', mode = 'lines')
houseyear <- filter(newDF, year == 2010)
plot_ly(houseyear, x = ~houseyear$DateTime, y = ~houseyear$Sub_metering_1, type = 'scatter', mode = 'lines')
plot_ly(houseyear, x = ~houseyear$DateTime, y = ~houseyear$Sub_metering_1, type = 'scatter', mode = 'lines') %>% add_trace(y= ~houseyear$Sub_metering_2, name = 'Laundry Room', mode = 'lines') %>% add_trace(y=~houseyear$Sub_metering_3, name = 'Water Heater & AC' mode = 'lines')
plot_ly(houseyear, x = ~houseyear$DateTime, y = ~houseyear$Sub_metering_1, type = 'scatter', mode = 'lines') %>% add_trace(y= ~houseyear$Sub_metering_2, name = 'Laundry Room', mode = 'lines') %>% add_trace(y=~houseyear$Sub_metering_3, name = 'Water Heater & AC' mode = 'lines')
plot_ly(houseyear, x = ~houseyear$DateTime, y = ~houseyear$Sub_metering_1, type = 'scatter', name = 'Kitchen', mode = 'lines') %>% add_trace(y = ~houseyear$Sub_metering_2, name = 'Laundry Room', mode = 'lines') %>% add_trace(y=~houseyear$Sub_metering_3, name = 'Water Heater & AC' mode = 'lines')
plot_ly(houseyear, x = ~houseyear$DateTime, y = ~houseyear$Sub_metering_1, name = 'Kitchen', type = 'scatter', mode = 'lines') %>%
add_trace(y = ~houseyear$Sub_metering_2, name = 'Laundry Room', mode = 'lines') %>%
add_trace(y = ~houseyear$Sub_metering_3, name = 'Water Heater & AC', mode = 'lines') %>%
layout(title = "Power Consumption Year 2010",
xaxis = list(title = "Time"),
yaxis = list (title = "Power (watt-hours)"))
View(houseyear)
houseyear <- filter(newDF, year == 2010 & (minute == 0 | minute == 10 | minute == 20 | minute == 30 | minute == 40 | minute == 50) )
plot_ly(houseyear, x = ~houseyear$DateTime, y = ~houseyear$Sub_metering_1, name = 'Kitchen', type = 'scatter', mode = 'lines') %>%
add_trace(y = ~houseyear$Sub_metering_2, name = 'Laundry Room', mode = 'lines') %>%
add_trace(y = ~houseyear$Sub_metering_3, name = 'Water Heater & AC', mode = 'lines') %>%
layout(title = "Power Consumption Year 2010",
xaxis = list(title = "Time"),
yaxis = list (title = "Power (watt-hours)"))
house070809weekly <- filter(yourData, weekDay == 2 & hour == 20 & minute == 1)
house070809weekly <- filter(newDF, weekDay == 2 & hour == 20 & minute == 1)
library(dplyr)
library()
library(lubridate)
house070809weekly <- filter(newDF, weekDay == 2 & hour == 20 & minute == 1)
summary(newDF)
house070809weekly <- filter(newDF, weekday == 2 & hour == 20 & minute == 1)
tsSM3_070809weekly <- ts(house070809weekly$Sub_metering_3, frequency=52, start=c(2007,1))
View(house070809weekly)
View(house070809weekly)
View(house070809weekly)
view(newDF)
head(newDF)
View(newDF)
tsSM2_070809weekly <- ts(house070809weekly$Sub_metering_2, frequency=52, start=c(2007,1))
View(house070809weekly)
house070809weekly <- filter(newDF, weekday == 2 & hour == 20 & minute == 1)
dbListTables(con)
library(RMySQL)
install.packages("RMySQL")
library(RMySQL)
dbListTables(con)
con = dbConnect(MySQL(), user='deepAnalytics', password='Sqltask1234!', dbname='dataanalytics2018', host='data-analytics-2018.cbrosir2cswx.us-east-1.rds.amazonaws.com')
dbListTables(con)
house070809weekly <- filter(newDF, weekday == 2 & hour == 20 & minute == 1)
View(house070809weekly)
View(house070809weekly)
View(con)
View(con)
View(con)
library(dplyr)
show(con)
con
plot(newDF$Sub_metering_1)
libarary(ggplot2)
library(ggplot2)
library(ggfortify)
install.packages("ggfortify")
library(ggfortify)
str(newDF)
summary(newDF)
house070809weekly <- filter(newDF, weekday == 2 & hour == 20 & minute == 1)
str(house070809weekly)
tsSM3_070809weekly <- ts(house070809weekly$Sub_metering_3, frequency=52, start=c(2007,1))
newDF$weekday <- weekdays(newDF$DateTime)
newDF$weekday <- weekday(newDF$DateTime)
house070809weekly <- filter(yourData, weekDay == 2 & hour == 20 & minute == 1)
house070809weekly <- filter(newDF, weekDay == 2 & hour == 20 & minute == 1)
house070809weekly <- filter(newDF, weekDay == 'Monday' & hour == 20 & minute == 1)
house070809weekly <- filter(newDF, weekday == 'Monday' & hour == 20 & minute == 1)
library(dplyr)
library(lubridate)
house070809weekly <- filter(newDF, weekday == 'Monday' & hour == 20 & minute == 1)
tsSM3_070809weekly <- ts(house070809weekly$Sub_metering_3, frequency=52, start=c(2007,1))
library(ggplot2)
library(ggfortify)
autoplot(tsSM3_070809weekly)
install.packages("labeling")
library(labeling)
autoplot(tsSM3_070809weekly)
autoplot(tsSM3_070809weekly, ts.colour = 'red', xlab = "Time", ylab = "Watt Hours", main = "Sub-meter 3")
plot.ts(tsSM3_070809weekly)
house10quarters <- filter(newDF, year == 2010 & quarter == 4 & quarter == 3 & quarter == 2 & quarter == 1 )
house10quarters <- filter(newDF, year == 2010 & quarter == 4 )
tsSM1_10quarters <- ts(house10quarters$Sub_metering_1, frequency=20, start=c(2010,9))
autoplot(tsSM1_10quarters)
tsSM1_10quarters <- ts(house10quarters$Sub_metering_1, frequency=52, start=c(2010,9))
autoplot(tsSM1_10quarters)
house070809weekly <- filter(newDF, weekday == 'Monday' & hour == 20 & minute == 1)
tsSM1_070809weekly <- ts(house070809weekly$Sub_metering_3, frequency=52, start=c(2007,1))
autoplot(tsSM1_070809weekly)
tsSM2_070809weekly <- ts(house070809weekly$Sub_metering_2, frequency=52, start=c(2007,1))
tsSM1_070809weekly <- ts(house070809weekly$Sub_metering_1, frequency=52, start=c(2007,1))
autoplot(tsSM1_070809weekly)
autoplot(tsSM2_070809weekly)
tsSM1_10quarters <- ts(house10quarters$Sub_metering_1, frequency=4, start=c(2010,9))
autoplot(tsSM1_10quarters)
tsSM1_10quarters <- ts(house10quarters$Sub_metering_1, frequency=10, start=c(2010,9))
autoplot(tsSM1_10quarters)
autoplot(tsSM1_10quarters)
tsSM1_10quarters <- ts(house10quarters$Sub_metering_1, frequency=100, start=c(2010,9))
autoplot(tsSM1_10quarters)
tsSM1_10quarters <- ts(house10quarters$Sub_metering_1, frequency=5, start=c(2010,9))
autoplot(tsSM1_10quarters)
house070809weeklymorning <- filter(newDF, weekday == 'Monday' & hour == 7 & minute == 1)
tsSM2_070809weeklymorning <- ts(house070809weeklymorning$Sub_metering_2, frequency=52, start=c(2007,1))
autoplot(tsSM2_070809weeklymorning)
library(forecast)
install.packages("forcast")
install.packages("forecast")
library(forecast)
fitSM3 <- tslm(tsSM3_070809weekly ~ trend + season)
summary(fitSM3)
forecastfitSM3 <- forecast(fitSM3, h=20)
plot(forecastfitSM3)
forecastfitSM3c <- forecast(fitSM3, h=20, level=c(80,90))
plot(forecastfitSM3c, ylim = c(0, 20), ylab= "Watt-Hours", xlab="Time")
house10quarters <- filter(newDF, year == 2010 )
library(dplyr)
library(lubridate)
house10quarters <- filter(newDF, year == 2010 )
tsSM1_10quarters <- ts(house10quarters$Sub_metering_1, frequency=4, start=c(2010,1))
autoplot(tsSM1_10quarters)
library(ggplot2)
autoplot(tsSM1_10quarters)
tsSM1_10quarters <- ts(house10quarters$Sub_metering_1, frequency=4, start=c(2010,1), end = c(2010, 12))
autoplot(tsSM1_10quarters)
tsSM1_10quarters <- ts(house10quarters$Sub_metering_1, frequency=4)
autoplot(tsSM1_10quarters)
tsSM1_10monthly <- ts(house10quarters$Sub_metering_1, frequency=12)
autoplot(tsSM1_10monthly)
plot.ts(tsSM1_10monthly)
tsSM1_10monthly <- ts(house10quarters$Sub_metering_1, frequency=12, start = c(2010, 1))
plot.ts(tsSM1_10monthly)
autoplot(tsSM1_10monthly)
fitSM1 <- tslm(tsSM1_10quarters ~ trend + season)
library(forecast)
fitSM1 <- tslm(tsSM1_10quarters ~ trend + season)
summary(fitSM2)
summary(fitSM1)
forecastfitSM1 <- forecast(fitSM1, h=4)
plot(forecastfitSM1)
forecastfitSM1 <- forecast(fitSM1, h=20)
plot(forecastfitSM1)
forecastfitSM1 <- forecast(fitSM1, h=1)
plot(forecastfitSM1)
forecastfitSM1 <- forecast(fitSM1, h=40)
plot(forecastfitSM1)
plot(forecastfitSM3)
forecastfitSM3
plot(forecastfitSM3)
fitSM1 <- tslm(tsSM1_10quarters ~ trend)
forecastfitSM1 <- forecast(fitSM1, h=20)
plot(forecastfitSM1)
forecastfitSM1 <- forecast(fitSM1, h=100)
plot(forecastfitSM1)
house2010weekly <- filter(newDF, year == 2010, weekday == 'Monday')
house2010weekly <- filter(newDF, year == 2010, weekday == 'Sunday')
tsSM1_2010weeklysunday <- ts(house2010weekly$Sub_metering_2, frequency = 52, start = c(2010, 1) )
fitsm2 <- tslm(tsSM1_2010weeklysunday ~ trend, season)
fitsm2 <- tslm(tsSM1_2010weeklysunday ~ trend + season)
forecastfitSM2 <- forecast(fitsm2, h=20)
plot(forecastfitSM2)
components070809SM3weekly <- decompose(tsSM3_070809weekly)
plot(components070809SM3weekly)
summary(components070809SM3weekly)
tsSM3_070809Adjusted <- tsSM3_070809weekly - components070809SM3weekly$seasonal
autoplot(tsSM3_070809Adjusted)
plot(decompose(tsSM3_070809Adjusted))
tsSM3_HW070809 <- HoltWinters(tsSM3_070809Adjusted, beta=FALSE, gamma=FALSE)
plot(tsSM3_HW070809, ylim = c(0, 25))
tsSM3_HW070809forC <- forecast(tsSM3_HW070809, h=25, level=c(10,25))
plot(tsSM3_HW070809forC, ylim = c(0, 20), ylab= "Watt-Hours", xlab="Time - Sub-meter 3", start(2010))
tsSM3_HW070809for <- forecast(tsSM3_HW070809, h=25)
plot(tsSM3_HW070809for, ylim = c(0, 20), ylab= "Watt-Hours", xlab="Time - Sub-meter 3")
plot(tsSM3_HW070809forC, ylim = c(0, 20), ylab= "Watt-Hours", xlab="Time - Sub-meter 3", start(2010))
hs_monthly <- filter(newDF, weekday == 'Saturday')
library(dplyr)
library(lubridate)
library(ggplot2)
library(forecast)
hs_monthly <- filter(newDF, weekday == 'Saturday')
tsSM2_monthly2010 <- ts(hs_monthly$Sub_metering_2, frequency = 12, start = c(2010, 1))
autoplot
autoplot(tsSM2_monthly2010)
fitsm2 <- tslm(tsSM2_monthly2010 ~ trend + season)
forecastfitSM2 <- forecast(fitsm2, h=2)
plot(forecastfitSM2)
forecastfitSM2 <- forecast(fitsm2, h=20)
plot(forecastfitSM2)
forecastfitSM2 <- forecast(fitsm2, h=1)
plot(forecastfitSM2)
forecastfitSM2 <- forecast(fitsm2, h=10)
plot(forecastfitSM2)
forecastfitSM2 <- forecast(fitsm2, h=50)
plot(forecastfitSM2)
hs_monthly <- filter(newDF, month == 1)
tsSM2_monthly2010 <- ts(hs_monthly$Sub_metering_2, frequency = 12)
autoplot(tsSM2_monthly2010)
fitsm2 <- tslm(tsSM2_monthly2010 ~ trend + season)
forecastfitSM2 <- forecast(fitsm2, h=2)
plot(forecastfitSM2)
hs_monthly <- filter(newDF, month == 1)
tsSM2_monthly2010 <- ts(hs_monthly$Sub_metering_2, frequency = 1, start = c(2010, 1))
autoplot(tsSM2_monthly2010)
fitsm2 <- tslm(tsSM2_monthly2010 ~ trend + season)
tsSM2_monthly2010 <- ts(hs_monthly$Sub_metering_2, frequency = 52, start = c(2010, 1))
fitsm2 <- tslm(tsSM2_monthly2010 ~ trend + season)
forecastfitSM2 <- forecast(fitsm2, h=2)
plot(forecastfitSM2)
tsSM2_monthly2010 <- ts(hs_monthly$Sub_metering_2, frequency = 12)
plot(forecastfitSM2)
fitsm2 <- tslm(tsSM2_monthly2010 ~ trend + season)
forecastfitSM2 <- forecast(fitsm2, h=2)
plot(forecastfitSM2)
forecastfitSM2 <- forecast(fitsm2, h=20)
plot(forecastfitSM2)
hs_quarter <- filter(newDF, quarter == 4)
tsSm1_quarter <- ts(hs_quarter$Sub_metering_1, frequency = 4)
tsSm1_quarter <- ts(hs_quarter$Sub_metering_1, frequency = 1)
autoplot(tsSm1_quarter)
tsSm1_quarter <- ts(hs_quarter$Sub_metering_1, frequency = 1, start = c(2007, 1))
autoplot(tsSm1_quarter)
hs_2010 <- filter(newDF, year == 2010)
tsSM2_quarter <- ts(hs_2010$Sub_metering_2, frequency = 4)
autoplot(tsSm2_quarter)
tsSM2_quarter <- ts(hs_2010$Sub_metering_2, frequency = 4)
autoplot
autoplot(tsSM2_quarter)
fitSM_2 <- tslm(tsSM2_quarter ~ trend + season)
forecastfitSM_2 <- forecast(fitSM_2, h=2)
View(forecastfitSM_2)
plot(forecastfitSM_2)
hs_2010 <- filter(newDF, year == 2010, month == 1, week == 1 )
hs_2010 <- filter(newDF, month == 1 )
tsSM2_quarter <- ts(hs_2010$Sub_metering_2, frequency = 12)
autoplot(tsSM2_quarter)
tsSM2_quarter <- ts(hs_2010$Sub_metering_2, frequency = 12, start = c(2010, 1))
autoplot(tsSM2_quarter)
fitSM_2 <- tslm(tsSM2_quarter ~ trend + season)
forecastfitSM_2 <- forecast(fitSM_2, h=6)
View(forecastfitSM_2)
plot(forecastfitSM_2)
forecastfitSM_2 <- forecast(fitSM_2, h=60)
plot(forecastfitSM_2)
forecastfitSM_2 <- forecast(fitSM_2, h=2)
plot(forecastfitSM_2)
forecastfitSM_2 <- forecast(fitSM_2)
plot(forecastfitSM_2)
library(dplyr)
library(lubridate)
library(ggplot2)
filter()
filter
house_summer2010 <- filter(newDF, month == 6)
tsSM3_summer2010 <- ts(house_summer2010$Sub_metering_3, frequency = 12, start = c(2010, 6))
autoplot(tsSM3_summer2010)
tsSM3_summer2010 <- ts(house_summer2010$Sub_metering_3, frequency = 1, start = c(2010, 6))
autoplot(tsSM3_summer2010)
tsSM3_summer2010 <- ts(house_summer2010$Sub_metering_3, frequency = 12, start = c(2010, 6), end = c(2010, 9))
autoplot(tsSM3_summer2010)
house_summer2010 <- filter(newDF, quarter== 3)
tsSM3_summer2010 <- ts(house_summer2010$Sub_metering_3, frequency = 4)
autoplot(tsSM3_summer2010)
tsSM3_summer2010 <- ts(house_summer2010$Sub_metering_3, frequency = 1)
autoplot(tsSM3_summer2010)
tsSM3_summer2010 <- ts(house_summer2010$Sub_metering_3, frequency = 4, start = c(2010, 1))
autoplot(tsSM3_summer2010)
house_summer2010 <- filter(newDF, quarter== 1)
autoplot(tsSM3_summer2010)
tsSM3_summer2010 <- ts(house_summer2010$Sub_metering_2, frequency = 4, start = c(2010, 1))
autoplot(tsSM3_summer2010)
library(ggfortify)
autoplot(tsSM3_summer2010)
library(forecast)
fitSM22 <- tslm(tsSM3_summer2010 ~ trend + season)
summary(fitSM22)
tsSM3_summer2010 <- ts(house_summer2010$Sub_metering_2, frequency = 4, start = c(2010, 3))
autoplot(tsSM3_summer2010)
fitSM22 <- tslm(tsSM3_summer2010 ~ trend + season)
forecastfitSM22 <- forecast(fitSM22, h=2)
plot(forecastfitSM22)
forecastfitSM22 <- forecast(fitSM22, h=4)
plot(forecastfitSM22)
forecastfitSM22 <- forecast(fitSM22, h=12)
plot(forecastfitSM22)
forecastfitSM22 <- forecast(fitSM22, h=1)
plot(forecastfitSM22)
View(forecastfitSM22)
View(fitSM22)
View(forecastfitSM22)
View(fitSM22)
View(forecastfitSM22)
forecastfitSM22 <- forecast(fitSM22, h=50)
plot(forecastfitSM22)
View(house_summer2010)
house070809weekly
View(house070809weekly)
house_summer2010 <- filter(newDF, quarter = 4)
house_summer2010 <- filter(newDF, quarter == 4)
View(house_summer2010)
View(house_summer2010)
house_summer2010 <- filter(newDF, quarter == 4, month == 6 & month == 7 & month == 8 & month == 9)
house_summer2010 <- filter(newDF, quarter == 4, month == 6)
house_summer2010 <- filter(newDF, quarter == 4)
View(house_summer2010)
house_summer2010 <- filter(newDF, quarter == 3)
View(house_summer2010)
house_summer2010 <- filter(newDF, month == 6)
View(house070809weekly)
house_summer2010 <- filter(newDF, month == 6, 7, 8, 9)
View(house_summer2010)
house_summer2010 <- filter(newDF, month == 6, quarter == 3)
house_summer2010 <- filter(newDF, month == 6, quarter == 2)
house_summer2010 <- filter(newDF, month == 6)
tsSM3_summer2010 <- ts(house_summer2010$Sub_metering_2, frequency = 4)
autoplot(tsSM3_summer2010)
tsSM3_summer2010 <- ts(house_summer2010$Sub_metering_2, frequency = 4, start = c(2010, 2))
autoplot(tsSM3_summer2010)
View(house_summer2010)
house_summer2010 <- filter(newDF, month == 6, year == 2010)
View(house_summer2010)
house_summer2010 <- filter(newDF, quarter == 1, year == 2010)
View(house_summer2010)
house_summer2010 <- filter(newDF, year == 2010)
View(house_summer2010)
tsSM3_summer2010 <- ts(house_summer2010$Sub_metering_2, frequency = 4)
autoplot(tsSM3_summer2010)
fitSM22 <- tslm(tsSM3_summer2010 ~ trend + season)
fitsm22 <- tslm(tsSM3_summer2010 ~ trend + season)
View(forecastfitSM22)
forecastfitSM22 <- forecast(fitSM22, h=2)
forecastfitSM22 <- forecast(fitSM22, h=200)
forecastfitSM22 <- forecast(fitSM22, h=10)
forecastfitSM22 <- forecast(fitSM22)
plot(forecastfitSM22)
house070809Sunday <- filter(newDF, weekday == 'Sunday' & hour == 7 & minute == 1)
View(house070809Sunday)
tsSM1_070809Sunday <- ts(house070809Sunday, frequency = 52, start = c(2007, 1))
View(tsSM1_070809Sunday)
View(tsSM1_070809Sunday)
tsSM1_070809Sunday <- ts(house070809Sunday$Sub_metering_1, frequency = 52, start = c(2007, 1))
autoplot(tsSM1_070809Sunday)
house070809Sunday <- filter(newDF, weekday == 'Saturday' & hour == 7 & minute == 1)
autoplot(tsSM1_070809Sunday)
house070809Sunday <- filter(newDF, weekday == 'Saturday' & hour == 20 & minute == 1)
autoplot(tsSM1_070809Sunday)
house070809Sunday <- filter(newDF, weekday == 'Sunday' & hour == 20 & minute == 0)
autoplot(tsSM1_070809Sunday)
tsSM1_070809Sunday <- ts(house070809Sunday$Sub_metering_1, frequency = 52, start = c(2007, 1))
autoplot(tsSM1_070809Sunday)
View(house070809Sunday)
fitSM1sunday <- tslm(tsSM1_070809Sunday ~ trend + season)
forecastfitSM1sunday <- forecast(fitSM1sunday, h=52)
plot(forecastfitSM1sunday)
house2010monthly <- filter(newDF, weekday == 'Monday' & hour == 7 & minute == 0 )
View(house2010monthly)
house2010monthly <- filter(newDF, year == 2010 )
View(house2010monthly)
tsSM2_monthly2010 <- ts(house2010monthly$Sub_metering_2, frequency = 12)
house2010monthly <- filter(newDF, year == 2010 & weekday == 'Sunday')
View(house2010monthly)
View(house2010monthly)
house2010monthly <- filter(newDF, year == 2010 & weekday == 'Sunday' & between(hour, 7, 21))
View(house2010monthly)
house2010monthly <- filter(newDF, year == 2010 & weekday == 'Sunday' & between(hour, 7, 21))
house2010monthly <- filter(newDF, weekday == 'Sunday' & between(hour, 7, 21))
house2010monthly <- filter(newDF, year == 2010)
house2010monthly <- filter(newDF, year == 2010, month == 6)
View(house2010monthly)
View(house2010monthly)
house2010monthly <- filter(newDF, year == 2010, month == 12)
View(house2010monthly)
View(house2010monthly)
house2010monthly <- filter(newDF, week == 52)
View(house_summer2010)
library(dplyr)
library(lubridate)
library(forecast)
house2010summer <- filter(newDF, year == 2010 & between(month,6,9) & between(hour, 10, 20))
tsSM2_summer2010 <- ts(house2010summer$Sub_metering_2, frequency=60, start=c(1, 1))
library(ggplot2)
autoplot(tsSM2_summer2010)
library(ggfortify)
autoplot(tsSM2_summer2010)
house2010summer <- filter(newDF, year == 2010 & between(month,6,9) & (hour == 10 | hour == 20) & minute ==0)
View(house2010summer)
tsSM2_summer2010 <- ts(house2010summer$Sub_metering_2, frequency=60, start=c(1, 1))
autoplot(tsSM2_summer2010)
autoplot(tsSM1_070809Sunday)
plot(forecastfitSM1sunday)
tsSM2_summer2010 <- ts(house2010summer$Sub_metering_2, frequency=60, start=c(1, 1))
tsSM2_summer2010 <- ts(house2010summer$Sub_metering_2, frequency=60, start=c(1, 1))
fitSM2summer2010 <- tslm(tsSM2_summer2010 ~ trend + season)
house070809summer <- filter(newDF, between(month,6,9) & (hour == 10 | hour == 20) & minute ==0)
house070809summer <- filter(newDF, between(month,6,9) & day == 2 & (hour == 10 | hour == 20) & minute ==0)
View(house070809summer)
tsSM2070809summer <- ts(house070809summer$Sub_metering_2, frequency = 12, start = c(2007, 1))
autoplot(tsSM2070809summer)
fitSM2070809summer <- tslm(tsSM2070809summer ~ trend + season )
forecastfitsm2_070809summer <- forecast(fitSM2070809summer, h=48)
plot(forecastfitsm2_070809summer)
forecastfitsm2_070809summer <- forecast(fitSM2070809summer, h=24)
plot(forecastfitsm2_070809summer)
autoplot(tsSM2070809summer)
plot(forecastfitsm2_070809summer)
forecastfitSM2_070809summerC <- forecast(fitSM2070809summer, h=24, level=c(80,90))
plot(forecastfitSM2_070809summerC)
> plot(forecastfitsm2_070809summer)
plot(forecastfitsm2_070809summer)
forecastfitSM2_070809summerC <- forecast(fitSM2070809summer, h=24, level=c(20,30))
plot(forecastfitSM2_070809summerC)
forecastfitSM2_070809summerC <- forecast(fitSM2070809summer, h=24, level=c(50,60))
plot(forecastfitSM2_070809summerC)
forecastfitSM2_070809summerC <- forecast(fitSM2070809summer, h=24, level=c(80,90))
plot(forecastfitSM2_070809summerC)
forecastfitSM2_070809summerC <- forecast(fitSM2070809summer, h=24, level=c(90,100))
forecastfitSM2_070809summerC <- forecast(fitSM2070809summer, h=24, level=c(60,70))
plot(forecastfitSM2_070809summerC)
plot(forecastfitsm2_070809summer)
forecastfitSM2_070809summerC <- forecast(fitSM2070809summer, h=24, level=c(50,60))
plot(forecastfitSM2_070809summerC)
forecastfitSM2_070809summerC <- forecast(fitSM2070809summer, h=24, level=c(80,90))
plot(forecastfitSM2_070809summerC)
plot(forecastfitSM1sunday)
forecastfitSM1sundayC <- forecast(fitSM1sunday, h=52, level=c(80,90))
plot(forecastfitSM1sundayC)
forecastfitSM1sundayC <- forecast(fitSM1sunday, h=52, level=c(30,50))
plot(forecastfitSM1sundayC)
forecastfitSM1sundayC <- forecast(fitSM1sunday, h=52, level=c(10,20))
plot(forecastfitSM1sundayC)
forecastfitSM1sundayC <- forecast(fitSM1sunday, h=52, level=c(50,70))
plot(forecastfitSM1sundayC)
forecastfitSM1sundayC <- forecast(fitSM1sunday, h=52, level=c(80,90))
plot(forecastfitSM1sundayC)
forecastfitSM1sundayC <- forecast(fitSM1sunday, h=52, level=c(70,80))
plot(forecastfitSM1sundayC)
plot(forecastfitSM1sundayC, ylim = c(0, 40), ylab= "Watt-Hours", xlab="Time")
plot(forecastfitSM2_070809summerC, ylim = c(0, 5), ylab= "Watt-Hours", xlab="Time")
plot(forecastfitSM2_070809summerC, ylim = c(0, 4), ylab= "Watt-Hours", xlab="Time")
plot(forecastfitSM1sundayC)
forecastfitSM1sundayC <- forecast(fitSM1sunday, h=52, level=c(70,80))
summary(forecastfitSM1sundayC)
summary(forecastfitSM1sunday)
summary(fitSM1sunday)
summary(fitSM2070809summer)
components070809SM1weeklysunday <- decompose(tsSM1_070809Sunday)
plot(components070809SM1weeklysunday)
components070809SM2monthlysummer <- decompose(tsSM2070809summer)
plot(components070809SM2monthlysummer)
summary(components070809SM1weeklysunday)
summary(components070809SM2monthlysummer)
tsSM1_070809SundayAdjusted <- tsSM1_070809Sunday - components070809SM1weeklysunday$seasonal
autoplot(tsSM1_070809SundayAdjusted)
plot(decompose(tsSM1_070809SundayAdjusted))
tsSM1_HW070809sunday <- HoltWinters(tsSM1_070809SundayAdjusted, beta=FALSE, gamma=FALSE)
autoplot(tsSM1_070809SundayAdjusted)
plot(tsSM1_HW070809sunday, ylim = c(0, 50))
tsSM2070809summerAdjusted <- tsSM2070809summer - components070809SM2monthlysummer$seasonal
autoplot(tsSM2070809summerAdjusted)
plot(decompose(tsSM2070809summerAdjusted))
tsSM2_HW070809summer <- HoltWinters(tsSM2070809summerAdjusted, beta=FALSE, gamma=FALSE)
plot(tsSM2_HW070809summer, ylim = c(0, 5))
tsSM2_HW070809summerC <- forecast(tsSM2_HW070809summer, h=24, level=c(10,25))
plot(tsSM2_HW070809summerC, ylim = c(0, 5), ylab= "Watt-Hours", xlab="Time - Sub-meter 2", start(2010))
tsSM1_HW070809sundayC <- forecast(tsSM1_HW070809sunday, h=52, level=c(10,25))
plot( tsSM1_HW070809sundayC, ylim = c(0, 50), ylab= "Watt-Hours", xlab="Time - Sub-meter 1", start(2010))
plot(tsSM1_HW070809sunday, ylim = c(0, 50), ylab= "Watt-Hours", xlab="Time - Sub-meter 1")
tsSM1_HW070809sundayfor <- forecast(tsSM1_HW070809sunday, h=52)
plot(tsSM1_HW070809sundayfor, ylim = c(0, 20), ylab= "Watt-Hours", xlab="Time - Sub-meter 1")
tsSM2_HW070809summerfor <- forecast(tsSM2_HW070809summer, h=24)
plot(tsSM2_HW070809summerfor , ylim = c(0, 20), ylab= "Watt-Hours", xlab="Time - Sub-meter 2")
plot(tsSM2_HW070809summerfor , ylim = c(0, 5), ylab= "Watt-Hours", xlab="Time - Sub-meter 2")
Plot(tsSM1_HW070809sundayfor , ylim = c(0, 50), ylab= "Watt-Hours", xlab="Time - Sub-meter 1")
Plot(tsSM1_HW070809sundayfor, ylim = c(0, 50), ylab= "Watt-Hours", xlab="Time - Sub-meter 1")
Plot(tsSM1_HW070809sundayfor , ylim = c(0, 50), ylab= "Watt-Hours", xlab="Time - Sub-meter 1")
plot(tsSM1_HW070809sundayfor, ylim = c(0, 20), ylab= "Watt-Hours", xlab="Time - Sub-meter 1")
plot(tsSM1_HW070809sundayfor, ylim = c(0, 50), ylab= "Watt-Hours", xlab="Time - Sub-meter 1")
plot(tsSM1_HW070809sundayfor, ylim = c(0, 20), ylab= "Watt-Hours", xlab="Time - Sub-meter 1")
plot(tsSM1_HW070809sundayfor, ylim = c(0, 50), ylab= "Watt-Hours", xlab="Time - Sub-meter 1")
autoplot(tsSM2070809summer)
library(dplyr)
library(lubridate)
library(ggplot2)
library(ggfortify)
library(forecast)
house070809Sunday
summary(components070809SM3weekly)
plot(components070809SM1weeklysunday$seasonal)

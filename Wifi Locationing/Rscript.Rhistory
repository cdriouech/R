library(readr)
library(readr)
trainingData <- read_csv("~/UT Data Analytics Course/Course 3/Task 3 Wifi Locationing/UJIndoorLoc/UJIndoorLoc/trainingData.csv")
View(trainingData)
View(trainingData)
trainingData <-cbind(trainingData,paste(trainingData$BUILDINGID,trainingData$FLOOR, trainingData$SPACEID, trainingData$RELATIVEPOSITION), stringsAsFactors=TRUE)
colnames(trainingData)[530] <-"Positionning"
trainingData <- trainingData[,c(ncol(trainingData), 1:(ncol(trainingData)-1))]
head(yourdataframe)
head(trainingData)
B0data <- subset(trainingData, BUILDINGID == 0)
B1data <- subset(trainingData, BUILDINGID == 1)
B2data <- subset(trainingData, BUILDINGID == 2)
View(B0data)
View(B1data)
View(B2data)
install.packages("caret")
install.packages("caret", dependencies = c("Depends", "Suggests"))
library(caret)
summary(trainingData)
str(trainingData)
str(B1data)
View(B0data)
View(B1data)
View(B0data)
View(B1data)
str(B1data)
Set.seed(998)
seed
library(setRNG)
seed
Set.seed(998)
library(caret)
set.seed(998)
Intraining<- createDataPartition(B0data$Positionning, p=.75, list=FALSE)
View(Intraining)
Intraining1<- createDataPartition(B1data$Positionning, p=.75, list=FALSE)
Intraining2<- createDataPartition(B2data$Positionning, p=.75, list=FALSE)
Training <- completeResponses[intraining,]
Training <- B0data[intraining,]
Training <- B0data[Intraining,]
Training1 <- B1Data[Intraining,]
Training1 <- B1data[Intraining1,]
Training2 <- B2data[Intraining2,]
Testing <-  B0data[Intraining,]
Testing1 <-  B1data[Intraining1,]
Testing2 <-  B2data[Intraining2,]
Fitcontrol<- traincontrol(method=”repeatdcv” , number = 10, repeats = 1)
Fitcontrol<- traincontrol(method=”repeatdcv” , number = 10, repeats = 1)
Fitcontrol<- traincontrol(method='repeatdcv', number = 10, repeats = 1)
install.packages("traincontrol")
library(traincontrol)
library(caret)
Fitcontrol<- traincontrol(method='repeatdcv', number = 10, repeats = 1)
fitControl <- trainControl(method = "repeatedcv", number = 10, repeats = 1)
library(caret)
set.seed(996)
fitControl <- trainControl(method = "repeatedcv", number = 10, repeats = 1)
rfBuild0 <- train(Positionning~., data = Training, method = "rf", trControl=fitControl, tuneLength = 1)
str(B0data)
B0data.NA()
is.na(B0data)
View(B0data)
rfBuild0 <- train(Positionning~., data = Training, method = "rf", trControl=fitControl, tuneLength = 1)
is.na(Training)
library(caret)
rfBuild0 <- train(as.factor(Positionning)~., data = Training, method = "rf", trControl=fitControl, tuneLength = 1)
rfBuild0 <- train(droplevels(B0data)$Positionning~., data = Training, method = "rf", trControl=fitControl, tuneLength = 1)
table(B0data$Positionning)
table(droplevels(B0data)$Positionning)
Droppos <- table(droplevels(B0data$Positionning))
rfBuild0 <- train(Droppos~., data = Training, method = "rf", trControl=fitControl, tuneLength = 1)
levels(B0data$Positionning)
View(B0data)
View(B1data)
View(B2data)
str(B0data)
factor(B0data$Positionning = character(), levels, labels = levels,
exclude = NA, nmax = NA)
factor(B0data$Positionning = character(), levels, labels = levels,exclude = NA, ordered = is.ordered(x), nmax = NA)
is.factor(B0data$Positionning)
set.seed(998)
rfBuild0 <- train(Droppos~., data = Training, method = "rf", trControl=fitControl, tuneLength = 1)
rfBuild0 <- train(Positionning~., data = Training, method = "rf", trControl=fitControl, tuneLength = 1)
rfGrid<- expand.grid(mtry=c(1,2,3,4,5))
system.time(rfBuild0 <- train(Positionning~., data = Training, method = "rf", trControl=fitControl, tuneGrid=rfGrid))
levels(B0data$Positionning)
class(B0data$Positionning)
is.na(B0data$Positionning)
B0data$Positionning <- factor(B0data$Positionning)
system.time(rfBuild0 <- train(Positionning~., data = Training, method = "rf", trControl=fitControl, tuneGrid=rfGrid))
levels(B0data$Positionning)
B0data$Positionning
B0data$Positionning <- factor(B0data$Positionning)
levels(B0data$Positionning)
B0data$Positionning
levels(droplevels(B0data$Positionning))
drop.levels(B0data)
drop.levels(B0data$Positionning)
install.packages("gdata")
library(gdata)
drop.levels(B0data$Positionning)
drop.levels(B0data)
str(B0data)
str(B1data)
str(B2data)
B1data$Positionning <- factor(B1data$Positionning)
str(B1data)
B1data$Positionning <- factor(B1data$Positionning)
str(B1data)
B2data$Positionning <- factor(B2data$Positionning)
str(B2data)
nearZeroVar(B0data)
nearZeroVar(B0data$Positionning)
nearZeroVar(B0data$USERID)
nearZeroVar(B0data$WAP003)
nearZeroVar(B0data$RELATIVEPOSITION)
nearZeroVar(B0data$BUILDINGID)
nearZeroVar(B0data$WAP001)
library(caret)
library(gdata)
set.seed(998)
apply(B0data, 2, var)
variances<-apply(GermanCredit, 2, var)
variances<-apply(B0data, 2, var)
variances
variances[which(variances<=0.0025)]
names(GermanCredit)[nearZeroVar(B0data)]
names(B0data)[nearZeroVar(B0data)]
B0data <- B0data[, -nearZeroVar(B0data)]
B1data <- B1data[, -nearZeroVar(B1data)]
B2data <- B2data[, -nearZeroVar(B2data)]
system.time(rfBuild0 <- train(Positionning~., data = Training, method = "rf", trControl=fitControl, tuneGrid=rfGrid))
Intraining<- createDataPartition(B0data$Positionning, p=.75, list=FALSE)
B0data$Positionning
Training
str(Training)
Training <- Training[, -nearZeroVar(Training)]
system.time(rfBuild0 <- train(Positionning~., data = Training, method = "rf", trControl=fitControl, tuneGrid=rfGrid))
str(Training)
Training$Positionning <- factor(Training$Positionning)
str(Training)
system.time(rfBuild0 <- train(Positionning~., data = Training, method = "rf", trControl=fitControl, tuneGrid=rfGrid))
rfBuild0
CBuild0<- train(Positionning ~ ., data = Training, method = "C5.0", trcontrol=fitControl)
install.packages(C50)
install.packages("C50)
install.packages("C50")
library(C50)
install.packages("inum")
library(inum)
CBuild0<- train(Positionning ~ ., data = Training, method = "C5.0", trcontrol=fitControl)
warning()
warning(CBuild0)
CBuild0<- train(Positionning ~ ., data = Training, method = "C5.0", trcontrol=fitControltuneLength = 3)
CBuild0<- train(Positionning ~ ., data = Training, method = "C5.0", trcontrol=fitControl, tuneLength = 3)
CBuild0
CBuild0<- train(Positionning ~ ., data = Training, method = "C5.0", trcontrol=fitControl)
CBuild0
set.seed(9999)
knnBuild0 <- train(Positionning~., data = Training, method = "knn", trControl=fitControl, preProcess = c("center", "scale"), tuneLength = 10)
knnBuild0
Training1$Positionning <- factor(Training1$Positionning)
View(Training1)
View(Training1)
View(Training1)
Training1$Positionning <- factor(Training1$Positionning)
Training2$Positionning <- factor(Training2$Positionning)
str(Training1)
str(Training2)
Training1 <- Training1[, -nearZeroVar(Training1)]
Training2 <- Training2[, -nearZeroVar(Training2)]
> system.time(rfBuild1 <- train(Positionning~., data = Training1, method = "rf", trControl=fitControl, tuneGrid=rfGrid))
> system.time(rfBuild1 <- train(Positionning~., data = Training1, method = "rf", trControl=fitControl, tuneGrid=rfGrid))
system.time(rfBuild1 <- train(Positionning~., data = Training1, method = "rf", trControl=fitControl, tuneGrid=rfGrid))
rfBuild1
View(Training)
View(B2data)
View(B1data)
View(B0data)
View(B0data)
B0data <- subset(trainingData, BUILDINGID == 0)
library(caret)
library(gdata)
library(inum)
library(C50)
nzr <- nearZeroVar(B0data, saveMetrics = TRUE)
nzr
summary(nzr)
zerovardata <- which(nzr$zeroVar == T)
zerovardata
B0data <- B0data[, -(zerovardata)]
nzr1 <- nearZeroVar(B1data, saveMetrics = TRUE)
B1data <- subset(trainingData, BUILDINGID == 1)
B2data <- subset(trainingData, BUILDINGID == 2)
nzr1 <- nearZeroVar(B1data, saveMetrics = TRUE)
nzr2 <- nearZeroVar(B2data, saveMetrics = TRUE)
zerovardata1 <- which(nzr1$zeroVar == T)
zerovardata2 <- which(nzr2$zeroVar == T)
B1data <- B1data[, -(zerovardata1)]
B2data <- B2data[, -(zerovardata2)]
Intraining<- createDataPartition(B0data$Positionning, p=.75, list=FALSE)
Intraining1<- createDataPartition(B1data$Positionning, p=.75, list=FALSE)
Intraining2<- createDataPartition(B2data$Positionning, p=.75, list=FALSE)
Training <- B0data[intraining,]
View(Training)
View(Intraining)
View(Intraining)
View(Intraining2)
Training <- B0data[intraining,]
Training <- B0data[Intraining,]
Training1 <- B1data[Intraining1,]
Training2 <- B2data[Intraining2,]
Droppos <- NULL
Testing <-  B0data[Intraining,]
Testing1 <-  B1data[Intraining1,]
Testing2 <-  B2data[Intraining2,]
system.time(rfBuild0 <- train(Positionning~., data = Training, method = "rf", trControl=fitControl, tuneGrid=rfGrid))
str(Training)
Training$Positionning <- factor(Training$Positionning)
str(Training)
system.time(rfBuild0 <- train(Positionning~., data = Training, method = "rf", trControl=fitControl, tuneGrid=rfGrid))
rfBuild0
> CBuild0<- train(Positionning ~ ., data = Training, method = "C5.0", trcontrol=fitControl, tuneLength = 3)
CBuild0<- train(Positionning ~ ., data = Training, method = "C5.0", trcontrol=fitControl, tuneLength = 5)
Fitcontrol<- traincontrol(method='repeatdcv', number = 10, repeats = 1)
install.packages("traincontrol")
fitControl <- trainControl(method = "repeatedcv", number = 10, repeats = 1)
View(fitControl)
CBuild0
set.seed(9999)
knnBuild0 <- train(Positionning~., data = Training, method = "knn", trControl=fitControl, preProcess = c("center", "scale"), tuneLength = 10)
knnBuild0
Training1$Positionning <- factor(Training1$Positionning)
Training2$Positionning <- factor(Training2$Positionning)
system.time(rfBuild1 <- train(Positionning~., data = Training1, method = "rf", trControl=fitControl, tuneGrid=rfGrid))
rfBuild1
CBuild1<- train(Positionning ~ ., data = Training1, method = "C5.0", trcontrol=fitControl)
CBuild1
knnBuild1 <- train(Positionning~., data = Training1, method = "knn", trControl=fitControl, preProcess = c("center", "scale"), tuneLength = 10)
knnBuild1
>ResultsrfBuild0<- predict(object = rfBuild0, newdata = Testing)
ResultsrfBuild0<- predict(object = rfBuild0, newdata = Testing)
table(ResultsrfBuild0, Testing$Positionning)
ResultsrfBuild0
postResample(ResultsrfBuild0, Testing$Positionning)
ResultsCBuild0<- predict(object = CBuild0, newdata = Testing)
table(ResultsCBuild0, Testing$Positionning)
postResample(ResultsCBuild0, Testing$Positionning)
ResultsknnBuild0<- predict(object = knnBuild0, newdata = Testing)
postResample(ResultsknnBuild0, Testing$Positionning)
ResultsrfBuild1<- predict(object = rfBuild1, newdata = Testing1)
postResample(ResultsrfBuild1, Testing1$Positionning)
ResultsCBuild1<- predict(object = CBuild1, newdata = Testing1)
postResample(ResultsCBuild1, Testing1$Positionning)
ResultsknnBuild1<- predict(object = knnBuild1, newdata = Testing1)
postResample(ResultsknnBuild1, Testing1$Positionning)
ModelData <- resamples(list(RF = rfBuild0, KNN = knnBuild0, C50 = CBuild0))
ModelData <- resamples(list(RF = rfBuild0, KNN = knnBuild0, C50 = CBuild0))
ModelData <- resamples(list(radom = rfBuild0, knn = knnBuild0, C50 = CBuild0))
ModelData <- resamples(list(rf = rfBuild0, knn = knnBuild0, C50 = CBuild0))
ModelData <- resamples(list(rf = rfBuild0, knn = knnBuild0, c50 = CBuild0))
set.seed(9978)
ModelData <- resamples(list(rf = rfBuild0, knn = knnBuild0, c50 = CBuild0))
ModelBuild0 <- resamples(list(C50 = CBuild0, knn=knnBuild0, rf=rfBuild0))
library(caret)
ModelBuild0 <- resamples(list(C50 = CBuild0, knn=knnBuild0, rf=rfBuild0))
resamp0 <- resamples(list(C50 = CBuild0, knn=knnBuild0, rf=rfBuild0))
library(mlbench)
resamp0 <- resamples(list(C50 = CBuild0, knn=knnBuild0, rf=rfBuild0))
library(sessioninfo)
library(dplyr)
resamp0 <- resamples(list(C50 = CBuild0, knn=knnBuild0, rf=rfBuild0))
sessionInfo()
library(caret)
resamp0 <- resamples(list(C5.0 = CBuild0, knn=knnBuild0, rf=rfBuild0))
library(caret)
ModelBuild0 <- resamples(list(C50 = CBuild0, knn=knnBuild0, rf=rfBuild0))
library(caret)
resamp0 <- resamples(list(C5.0 = CBuild0, knn=knnBuild0, rf=rfBuild0))
ResultsrfBuild0<- predict(object = rfBuild0, newdata = Testing)
table(ResultsrfBuild0, Testing$Positionning)
postResample(ResultsCBuild0, Testing$Positionning)
postResample(ResultrfCBuild0, Testing$Positionning)
postResample(ResultsrfBuild0, Testing$Positionning)
Training
library(caret)
plot(ResultsCBuild0)
library(caret)
ggplot(ResultsCBuild0)
set.seed(998)
plot(fitControl)
plot(rfBuild0, plotType = "scatter", metric = x$metric[1],
digits = getOption("digits") - 3, xTrans = NULL,
nameInStrip = FALSE, ...)
plot(rfBuild0, plotType = "scatter", metric = x$metric[1],
digits = getOption("digits") - 3, xTrans = NULL,
nameInStrip = FALSE)
summary(ResultsCBuild0)
plot(ResultsCBuild0)
modelvalues<-data.frame(obs = B0data$Positionning, pred=ResultsrfBuild0)
plot(Testing,ResultsrfBuild0)
plot(Testing$Positionning,ResultsrfBuild0)
modelvalues<-data.frame(obs = Testing$Positionning, pred=ResultsrfBuild0)
defaultSummary(modelvalues)
plot(modelvalues)
plot()
plot(modelvalues)
plot(Intraining$Positionning,ResultsCBuild0)
plot(intraining$Positionning,ResultsCBuild0)
plot(Training$Positionning,ResultsCBuild0)
plot(Training$Positionning,residuals)
residuals<-resid(rfBuild0)
plot(rfBuild0, plotType = "level")
ggplot(rdaFit) + theme_bw()
ggplot(rfBuild0) + theme_bw()
ggplot(CBuild0) + theme_bw()
ggplot(knnBuild0) + theme_bw()
library(caret)
